'use strict'

const definitions = require('./definitions')
const syntax = require('../lib/zql/syntax')

const cols = [
    {
        name          : 'id',
        type          : 'int',
        zenodo        : '',
        zenodeotype   : definitions.int,
        sqltype       : 'INTEGER PRIMARY KEY',
        cheerio       : '',
        defaultSet    : false,
        defaultOp     : '',
        description   : 'primary key',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'treatmentId',
        type          : 'guid',
        zenodo        : '',
        zenodeotype   : definitions.id,
        sqltype       : 'TEXT NOT NULL UNIQUE',
        select        : 'treatments.treatmentId',
        cheerio       : '$("document").attr("docId")',
        defaultSet    : true,
        defaultOp     : 'eq',
        description   : 'The unique ID of the treatment. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'treatmentTitle',
        type          : 'str',
        zenodo        : '',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("document").attr("docId")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'Title of the treatment. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'doi',
        type          : 'id',
        zenodo        : 'relatedidentifiers[isPartOf]',
        zenodeotype   : definitions.text,
        sqlType       : 'TEXT',
        cheerio       : '$("document").attr("ID-DOI")',
        defaultSet    : true,
        defaultOp     : 'eq',
        description   : 'DOI of journal article. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'zenodoDep',
        type          : 'id',
        zenodo        : 'relatedidentifiers[isPartOf]',
        zenodeotype   : definitions.text,
        sqlType       : 'TEXT',
        cheerio       : '$("document").attr("ID-Zenodo-Dep")',
        defaultSet    : true,
        defaultOp     : 'eq',
        description   : 'Zenodo record of journal article. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'zoobank',
        type          : 'id',
        zenodo        : 'relatedidentifiers[isPartOf]',
        zenodeotype   : definitions.text,
        sqlType       : 'TEXT',
        cheerio       : '$("document").attr("ID-ZooBank")',
        defaultSet    : true,
        defaultOp     : 'eq',
        description   : 'ZooBank ID of journal article. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'articleTitle',
        type          : 'str',
        zenodo        : '',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("document").attr("masterDocTitle")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The article in which the treatment was published. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'articleAuthor',
        type          : 'str',
        zenodo        : '',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("document").attr("????")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The author(s) of the article (not necessarily the same as the author of the treatment). ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'publicationDate',
        type          : 'date',
        zenodo        : 'publicationDate',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT NOT NULL UNIQUE',
        cheerio       : '$("mods\\\\:detail[type=pubDate] mods\\\\:number").text()',
        defaultSet    : true,
        defaultOp     : 'eq',
        description   : 'The publication date the treatment. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'journalTitle',
        type          : 'str',
        zenodo        : 'journal_title',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("mods\\\\:relatedItem[type=host] mods\\\\:titleInfo mods\\\\:title").text()',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The journal in which the treatment was published. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'journalYear',
        type          : 'str',
        zenodo        : 'journal_year',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("mods\\\\:relatedItem[type=host] mods\\\\:part mods\\\\:date").text()',
        defaultSet    : true,
        defaultOp     : 'eq',
        description   : 'The year of the journal. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'journalVolume',
        type          : 'str',
        zenodo        : 'journal_volume',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("mods\\\\:relatedItem[type=host] mods\\\\:part mods\\\\:detail[type=volume] mods\\\\:number").text()',
        defaultSet    : true,
        defaultOp     : 'eq',
        description   : 'The volume of the journal. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'journalIssue',
        type          : 'str',
        zenodo        : 'journal_issue',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("mods\\\\:relatedItem[type=host] mods\\\\:part mods\\\\:detail[type=issue] mods\\\\:number").text()',
        defaultSet    : true,
        defaultOp     : '',
        description   : 'The issue of the journal. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'pages',
        type          : 'str',
        zenodo        : 'pages',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("mods\\\\:relatedItem[type=host] mods\\\\:part mods\\\\:extent[unit=page] mods\\\\:start").text() + "â€“" + $("mods\\\\:relatedItem[type=host] mods\\\\:part mods\\\\:extent[unit=page] mods\\\\:end").text()',
        defaultSet    : true,
        defaultOp     : '',
        description   : 'The "from" and "to" pages where the treatment occurs in the article. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'authorityName',
        type          : 'str',
        zenodo        : 'creators',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("authorityName")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The author(s) of the treatment (not necessarily the same as the authors of the journal article, but omitted if same as article authors). ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'authorityYear',
        type          : 'str',
        zenodo        : '',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("authorityYear")',
        defaultSet    : true,
        defaultOp     : 'eq',
        description   : 'The year when the taxon name was published. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'kingdom',
        type          : 'str',
        zenodo        : 'subjects',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("kingdom")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The higher category of the taxonomicName. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'phylum',
        type          : 'str',
        zenodo        : 'subjects',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("phylum")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The higher category of the taxonomicName. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : '"order"',
        type          : 'str',
        zenodo        : 'subjects',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("order")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The higher category of the taxonomicName. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'family',
        type          : 'str',
        zenodo        : 'subjects',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("family")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The higher category of the taxonomicName. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'genus',
        type          : 'str',
        zenodo        : 'subjects',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("genus")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The higher category of the taxonomicName. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'species',
        type          : 'str',
        zenodo        : 'subjects',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("species")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The higher category of the taxonomicName. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'status',
        type          : 'str',
        zenodo        : 'subjects',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("status")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The descriptor for the taxonomic status proposed by a given treatment (can be new species, or new combination, or new combination and new synonym). ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'taxonomicNameLabel',
        type          : 'str',
        zenodo        : 'subjects',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").text()',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The Taxonomic Name Label of a new species. ',
        queryString   : '',
        validation    : '',
    },
    {
        name          : 'rank',
        type          : 'str',
        zenodo        : 'subjects',
        zenodeotype   : definitions.text,
        sqltype       : 'TEXT',
        cheerio       : '$("subSubSection[type=nomenclature] taxonomicName").attr("rank")',
        defaultSet    : true,
        defaultOp     : 'starts_with',
        description   : 'The taxonomic rank of the taxon, e.g. species, family. ',
        queryString   : '',
        validation    : '',
    },
    

    //  SELECT DISTINCT treatments.treatmentId, treatmentTitle FROM treatments JOIN vlocations ON treatments.treatmentId = vlocations.treatmentId WHERE geopoly_within(_shape, @poly) != 0
    {
        name          : 'location',
        type          : 'spatial',
        zenodo        : '',
        zenodeotype   : definitions.text,
        sqltype       : '',
        select        : false,
        cheerio       : '',
        defaultSet    : false,
        defaultOp     : '',
        description   : 'The location of the treatment. ',
        queryString   : '',
        validation    : '',
        jointable     : 'vlocations ON treatments.treatmentId = vlocations.treatmentId'
    },
    {
        name          : 'q',
        type          : 'fts',
        zenodo        : '',
        zenodeotype   : definitions.text,
        sqltype       : '',
        select        : false,
        cheerio       : '$("treatment").text()',
        defaultSet    : false,
        defaultOp     : '',
        description   : 'The full text of the treatment. ',
        queryString   : '',
        validation    : '',
        jointable     : 'vtreatments ON treatments.treatmentId = vtreatments.treatmentId'
    },
    // {
    //     name          : 'articleAuthor',
    //     zenodo        : '',
    //     zenodeotype   : definitions.text,
    //     sqltype       : 'TEXT NOT NULL UNIQUE',
    //     cheerio       : '$("document").attr("docId")',
    //     defaultSet    : true,
    //     queryParam    : 'articleAuthor',
    //     defaultOp     : 'starts_with',
    //     description   : 'The unique ID of the treatment',
    //     queryString   : '',
    //     validation    : '',
    // }
]

cols.forEach(c => {
    c.description = c.description + syntax(c.name, c.type)
})

module.exports = cols